{"version":3,"sources":["index.js"],"names":["gridContainer","document","querySelector","resetBtn","numOfSquares","createGrid","number","i","_loop","square","createElement","classList","add","squareSize","calcSquareSize","style","width","concat","height","appendChild","addEventListener","background","j","clientWidth","innerHTML","userChoice","prompt","isNaN","parseInt"],"mappings":";AAAA,IAAIA,EAAgBC,SAASC,cAAc,mBACvCC,EAAWF,SAASC,cAAc,QAElCE,EAAe,GAInB,SAASC,EAAWC,GAChB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,IACxB,IAD4B,IAAAC,EAAAA,WAExB,IAAMC,EAASR,SAASS,cAAc,OACtCD,EAAOE,UAAUC,IAAI,eAGrB,IAAMC,EAAaC,IACnBL,EAAOM,MAAMC,MAAKC,GAAAA,OAAMJ,EAAc,MACtCJ,EAAOM,MAAMG,OAAMD,GAAAA,OAAMJ,EAAc,MAEvCb,EAAcmB,YAAYV,GAE1BA,EAAOW,iBAAiB,YAAa,WACjCX,EAAOM,MAAMM,WAAa,UAZzBC,EAAI,EAAGA,EAAIhB,EAAQgB,IAAGd,IAmBvC,SAASM,IAEL,OADuBd,EAAcuB,YACbnB,EA1B5BC,EAAWD,GA8BXD,EAASiB,iBAAiB,QAAS,WAC/BpB,EAAcwB,UAAY,GAG1B,IAFA,IAAIC,EAAaC,OAAO,iBAEjBD,EAAa,IAAME,MAAMF,IAC5BA,EAAaC,OAAO,2CAIxBrB,EADAD,EAAewB,SAASH","file":"src.b95f4629.js","sourceRoot":"../src","sourcesContent":["let gridContainer = document.querySelector('.grid-container');\nlet resetBtn = document.querySelector('.btn');\n\nlet numOfSquares = 16;\ncreateGrid(numOfSquares);\n\n//two loops to get rows and columns\nfunction createGrid(number){\n    for (let i = 0; i < number; i++){\n        for (let j = 0; j < number; j++){\n            const square = document.createElement('div');\n            square.classList.add('grid-square');\n            \n            //get calculated size\n            const squareSize = calcSquareSize()\n            square.style.width = `${squareSize}px`;\n            square.style.height = `${squareSize}px`;\n            \n            gridContainer.appendChild(square);\n            //change color on hover\n            square.addEventListener('mouseover', function() {\n                square.style.background = 'blue';\n            })\n        }\n    }\n}\n\n//dynamically change the square dimension\nfunction calcSquareSize() {\n    const containerWidth = gridContainer.clientWidth;\n    return containerWidth / numOfSquares;\n}\n\n//clear grid and make new one\nresetBtn.addEventListener('click', function(){\n    gridContainer.innerHTML = '';\n    let userChoice = prompt('pick a number');\n    \n    while (userChoice > 64 || isNaN(userChoice)){\n        userChoice = prompt('pick a number less than or equal to 64.');\n    }\n    \n    numOfSquares = parseInt(userChoice); // Update the variable\n    createGrid(numOfSquares);   \n});"]}