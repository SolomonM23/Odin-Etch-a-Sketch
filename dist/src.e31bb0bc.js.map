{"version":3,"sources":["index.js"],"names":["gridContainer","document","querySelector","numOfSquares","i","_loop","square","createElement","classList","add","squareSize","calcSquareSize","style","width","concat","height","appendChild","addEventListener","background","j","containerWidth","clientWidth"],"mappings":"AAAA,IAAIA,aAAa,GAAGC,QAAQ,CAACC,aAAa,CAAC,iBAAiB,CAAC;AAC7D,IAAIC,YAAY,GAAG,EAAE;;AAErB;AACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,YAAY,EAAEC,CAAC,EAAE,EAAC;EAAA,IAAAC,KAAA,YAAAA,MAAA,EACI;IAClC,IAAMC,MAAM,GAAGL,QAAQ,CAACM,aAAa,CAAC,KAAK,CAAC;IAC5CD,MAAM,CAACE,SAAS,CAACC,GAAG,CAAC,aAAa,CAAC;;IAEnC;IACA,IAAMC,UAAU,GAAGC,cAAc,CAAC,CAAC;IACnCL,MAAM,CAACM,KAAK,CAACC,KAAK,MAAAC,MAAA,CAAMJ,UAAU,OAAI;IACtCJ,MAAM,CAACM,KAAK,CAACG,MAAM,MAAAD,MAAA,CAAMJ,UAAU,OAAI;IAEvCV,aAAa,CAACgB,WAAW,CAACV,MAAM,CAAC;IACjC;IACAA,MAAM,CAACW,gBAAgB,CAAC,WAAW,EAAE,YAAW;MAC5CX,MAAM,CAACM,KAAK,CAACM,UAAU,GAAG,MAAM;IACpC,CAAC,CAAC;EACN,CAAC;EAdD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGhB,YAAY,EAAEgB,CAAC,EAAE;IAAAd,KAAA;EAAA;AAezC;;AAEA;AACA,SAASM,cAAcA,CAAA,EAAG;EACtB,IAAMS,cAAc,GAAGpB,aAAa,CAACqB,WAAW;EAChD,IAAMX,UAAU,GAAGU,cAAc,GAAGjB,YAAY;EAChD,OAAOO,UAAU;AACrB","file":"src.e31bb0bc.js","sourceRoot":"../src","sourcesContent":["let gridContainer = document.querySelector('.grid-container');\nlet numOfSquares = 20;\n\n//two loops to get rows and columns\nfor (let i = 0; i < numOfSquares; i++){\n    for (let j = 0; j < numOfSquares; j++){\n        const square = document.createElement('div');\n        square.classList.add('grid-square');\n        \n        //get calculated size\n        const squareSize = calcSquareSize()\n        square.style.width = `${squareSize}px`;\n        square.style.height = `${squareSize}px`;\n        \n        gridContainer.appendChild(square);\n        //change color on hover\n        square.addEventListener('mouseover', function() {\n            square.style.background = 'blue';\n        })\n    }\n}\n\n//dynamically change the square dimension\nfunction calcSquareSize() {\n    const containerWidth = gridContainer.clientWidth;\n    const squareSize = containerWidth / numOfSquares;\n    return squareSize;\n}"]}